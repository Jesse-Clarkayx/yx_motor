# AUTOGENERATED! DO NOT EDIT! File to edit: 08_unit_test_helpers.ipynb (unless otherwise specified).

__all__ = ['pickle_object', 'unpickle_object', 'workflow_test_pickles', 'jobs_test_pickles', 'files_test_pickles']

# Cell
import pickle
from types import SimpleNamespace

# Cell

def pickle_object(obj, file_path):
    with open(file_path, 'wb') as f:
        pickle.dump(obj, f)

def unpickle_object(pickle_path):
    with open(pickle_path, 'rb') as f:
        return pickle.load(f)

# Cell

workflow_test_pickles = SimpleNamespace(
    workflow_run_response_pickle = r'test_pickles/workflows/run_workflow_response.pkl',
    workflow_get_vfs_inputs_response_pickle_path = r'test_pickles/workflows/get_vfs_inputs_response.pkl',
    workflow_job_response_pickle_path = r'test_pickles/workflows/workflow_job_response.pkl',
    output_asset_response_pickle_path = r'test_pickles/workflows/output_asset_response.pkl',
    workflow_download_files_response_pickle_path = r'test_pickles/workflows/download_files_response.pkl',
    download_path = 'wf_out_test.csv'
)

# Cell

jobs_test_pickles = SimpleNamespace(
    get_job_by_id = r'test_pickles/jobs/get_job_by_id_response.pkl',
    get_log_by_id = r'test_pickles/jobs/get_log_by_id_response.pkl'
)

# Cell

files_test_pickles = SimpleNamespace(
    download_file = r'test_pickles/files/download_file_response.pkl',
    upload_file = r'test_pickles/files/upload_file_response.pkl',
    upload_duplicate_file = r'test_pickles/files/duplicate_file_upload_response.pkl',
    upload_merge_file = r'test_pickles/files/upload_file_merge_response.pkl',
    get_file_versions = r'test_pickles/files/get_file_versions_response.pkl',
    delete_file = r'test_pickles/files/delete_file_response.pkl',
    move_file = r'test_pickles/files/move_file_response.pkl',
    copy_file = r'test_pickles/files/copy_file_response.pkl',
    restore_deleted = r'test_pickles/files/restore_deleted_file_response.pkl',
    restore_deleted_by_path = r'test_pickles/files/restore_deleted_by_path_response.pkl'
)